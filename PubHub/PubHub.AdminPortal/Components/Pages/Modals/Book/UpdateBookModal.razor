@inject PubHub.Common.Services.IBookService BookService
@inject PubHub.Common.Services.IContentTypeService ContentTypeService
@inject PubHub.Common.Services.IGenreService GenreService
@inject PubHub.Common.Services.IAuthorService AuthorService
@inject Radzen.NotificationService NotificationService

<div class="modal fade show" id="updateBookModal" style="display:block; background-color: rgba(10,10,10,.8);"
     aria-modal="true" role="dialog">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Updating: @BookInfo.Title</h4>
                <button type="button" class="btn close" @onclick="() => ModalOptions(false)">x</button>
            </div>
            <EditForm Model="bookUpdateform" OnSubmit="() => UpdateBook()">
                <div class="modal-body">
                    <div class="form-group mb-2">
                        <label for="updateBookTitleInput" class="form-label"><b>Book title:</b></label>
                        <input @bind-value="bookUpdateform.Title" id="updateBookTitleInput" class="form-control" placeholder="@BookInfo.Title" />
                    </div>
                    <div class="form-group mb-2">
                        <div class="row">
                            <div class="col-md-6">
                                <label for="updateSelectContentType" class="form-label"><b>Content type:</b></label>
                                <select @onchange="@(async value => { bookUpdateform.ContentTypeId = new Guid(value.Value!.ToString()!); })" id="updateSelectContentType" class="form-select">
                                    <option value="0">Nothing selected</option>
                                    @foreach (var contentType in contentTypes)
                                    {
                                        <option value="@contentType.Id">@contentType.Name</option>
                                    }
                                </select>
                            </div>
                            <div class="col-md-6">
                                <label for="updateBookContent" class="form-label"><b>Book content:</b></label>
                                <InputFile id="updateBookContent" class="form-control">Content</InputFile>
                            </div>
                        </div>
                    </div>
                    <div class="form-group mb-2">
                        <label for="updateBookCoverImg" class="form-label"><b>Cover image:</b></label>
                        <InputFile id="updateBookCoverImg" class="form-control">Cover image</InputFile>
                    </div>
                    <div class="form-group mb-2">
                        <div class="row">
                            <div class="col-md-6">
                                <label for="updateBookLength" class="form-label"><b>Book length:</b></label>
                                <input @bind-value="bookUpdateform.Length" id="updateBookLength" class="form-control" placeholder="@BookInfo.Length" />
                            </div>
                            <div class="col-md-6">
                                <label for="updateIsBookHidden" class="form-label"><b>Accessability:</b></label>
                                <div class="row">
                                    <div class="col-md-8 mt-2">
                                        <label class="form-label">Should the book be accessable?</label>
                                    </div>
                                    <div class="col-md-4 mt-2">
                                        <input @bind-value="bookUpdateform.IsHidden" id="updateIsBookHidden" type="checkbox" class="form-check" />
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="form-group mb-2">
                        <label for="updateBookGenres" class="form-label"><b>Genres:</b></label>
                        <RadzenDropDown Data="@genres" TextProperty="Name" ValueProperty="Id" AllowFiltering="true" @bind-Value="multipleGenres" Change="@GenreOnChange" Multiple="true" Placeholder="Select genres" Chips="true" AllowClear="true" Name="DropDownMultipleChips" Style="width: 100%; " />
                    </div>
                    <div class="form-group mb-2">
                        <label for="updateBookAuthors" class="form-label"><b>Authors:</b></label>
                        <input @bind-value="authorName" type="text" class="form-control" list="authorList" placeholder="Type in author" />
                        <datalist id="authorList">
                            @foreach (var author in authors)
                            {
                                <option>@author.Name</option>
                            }
                        </datalist>
                    </div>
                    <div class="form-group mb-2">
                        <div class="row">
                            <div class="col-md-6">
                                <label for="updatePublisherInput" class="form-label"><b>Publisher:</b></label>
                                <input id="updatePublisherInput" class="form-control" disabled placeholder="@BookInfo.Publisher.Name" />
                            </div>
                            <div class="col-md-6">
                                <label for="updatePublicationYear" class="form-label"><b>Publication year:</b></label>
                                <input id="updatePublicationYear" type="datetime" class="form-control" placeholder="Type in the date this will be published..." />
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-warning">Update</button>
                    <button type="button" class="btn btn-danger" @onclick="() => ModalOptions(false)">Cancel</button>
                </div>
            </EditForm>            
        </div>
    </div>
</div>

@code {
    [Parameter]
    public EventCallback<bool> OnClose { get; set; }

    [Parameter]
    public BookInfoModel? BookInfo { get; set; }

    public EditForm MyEditForm { get; set; } = new();
    private BookForm bookUpdateform = new();
    private List<ContentTypeInfoModel> contentTypes = new();
    private List<AuthorInfoModel> authors = new();
    string? authorName;
    IEnumerable<GenreInfoModel>? genres;
    IEnumerable<Guid>? multipleGenres;

    protected override async Task OnInitializedAsync()
    {
        contentTypes = await ContentTypeService.GetContentTypes();
        genres = await GenreService.GetGenres();
        authors = await AuthorService.GetAuthors();
    }

    void GenreOnChange(object genre)
    {
        var genreId = genre is IEnumerable<object> ? string.Join(", ", (IEnumerable<object>)genre) : genre;

        bookUpdateform.GenreIds = multipleGenres.ToList();
    }

    private void UpdateBook()
    {
        var result = BookService.UpdateBook(BookInfo.Id, bookUpdateform.UpdateBookModel());
        if (result.Result.StatusCode == ResponseCodeConstants.OK_CODE)
        {
            NotificationService.Notify(new Radzen.NotificationMessage { Severity = Radzen.NotificationSeverity.Success, Summary = result.Result.ErrorDescriptor, Detail = "Success", Duration = 5000 });
            ModalOptions(false);
        }
        else
        {
            NotificationService.Notify(new Radzen.NotificationMessage { Severity = Radzen.NotificationSeverity.Error, Summary = result.Result.ErrorDescriptor, Detail = "Error", Duration = 5000 });
        }
    }

    Task ModalOptions(bool IsClosing)
    {
        return OnClose.InvokeAsync(IsClosing);
    }
}
